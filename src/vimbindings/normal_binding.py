class NORMALMODEBINDINGS:
    def N_mode(self):
        self.normal_mode = {
            "backspace": lambda: self.action_cursor_left(),
            "v": lambda: self.enter_visual_mode(),
            "V": lambda: self.enter_visual_line_mode(linewise_visual_mode=True),
            "ctrl+v": lambda: self.enter_visual_block_mode(block_visual_mode=True),
            "i": lambda: self.enter_insert_mode(at_cursor=True),
            "I": lambda: self.enter_insert_mode(at_line_start=True),
            "a": lambda: self.enter_insert_mode(after_cursor=True),
            "A": lambda: self.enter_insert_mode(after_line=True),
            "o": lambda: self.enter_insert_mode(new_line_below=True),
            "O": lambda: self.enter_insert_mode(new_line_above=True),
            "h": lambda: self.action_cursor_left(),
            "l": lambda: self.action_cursor_right(),
            "k": lambda: self.action_cursor_up(),
            "j": lambda: self.action_cursor_down(),
            "w": lambda: self.action_cursor_word_right(),
            "b": lambda: self.action_cursor_word_left(),
            "ge": lambda: self.jump_backwards_to_end_of_word(),
            "gg": lambda: self.move_cursor((0, 0)),
            "G": lambda: self.move_cursor((len(self.text.splitlines()), 0)),
            "0": lambda: self.action_cursor_line_start(),
            "$": lambda: self.action_cursor_line_end(),
            "u": lambda: self.action_undo(),
            "ctrl+r": lambda: self.action_redo(),
            "H": lambda: self.move_to_top_of_screen(),
            "L": lambda: self.move_to_bot_of_screen(),
            "M": lambda: self.move_to_mid_of_screen(),
            "x": lambda: self.delete_at_cursor(),
            "X": lambda: self.action_delete_left(),
            "dd": lambda: self.action_delete_line(),
            "D": lambda: self.action_delete_to_end_of_line(),
            "colon": lambda: self.enter_command_mode(),
            "semicolon": lambda: self.handle_semicolon(),
            "dollar_sign": lambda: self.action_cursor_line_end(),
            "percent": lambda: self.move_to_matching_bracket(),
            "ampersand": lambda: self.handle_ampersand(),
            "tilde": lambda: self.toggle_case_at_cursor(),
            "grave_accent": lambda: self.handle_backtick(),
            "greater_than_sign": lambda: self.indent_line(),
            "less_than_sign": lambda: self.deindent_line(),
            "forward_slash": lambda: self.start_search(),
            "circumflex_accent": lambda: self.move_to_first_non_blank(),
        }
